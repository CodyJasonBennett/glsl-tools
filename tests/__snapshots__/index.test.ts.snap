// Vitest Snapshot v1

exports[`minify > can mangle GLSL 1`] = `
"#version 300 es
precision mediump float;
#define PLUS(n)n+=1;
#define TEST
#if defined(TEST)
const bool a=true;
#endif
uniform sampler2D map;in vec2 vUv;out vec4 pc_FragColor;
#include <three_test>
layout(std140)uniform Uniforms1{mat4 projectionMatrix;mat4 modelViewMatrix;mat3 normalMatrix;};layout(std140)uniform Uniforms2{mat4 projectionMatrix;mat4 modelViewMatrix;mat3 normalMatrix;}b;struct c{float intensity;vec3 position;};uniform c Light[4];void main(){vec4 d=vec4(Light[0].position.xyz*Light[0].intensity,0.0);vec4 e=projectionMatrix*modelViewMatrix*vec4(0,0,0,1);vec4 f=b.projectionMatrix*b.modelViewMatrix*vec4(0,0,0,1);pc_FragColor=vec4(texture(map,vUv).rgb,0.0);pc_FragColor.a+=1.0;}"
`;

exports[`minify > can mangle externals in GLSL 1`] = `
"#version 300 es
precision mediump float;
#define PLUS(n)n+=1;
#define TEST
#if defined(TEST)
const bool a=true;
#endif
uniform sampler2D b;in vec2 c;out vec4 d;
#include <three_test>
layout(std140)uniform e{mat4 projectionMatrix;mat4 modelViewMatrix;mat3 normalMatrix;};layout(std140)uniform f{mat4 projectionMatrix;mat4 modelViewMatrix;mat3 normalMatrix;}g;struct h{float intensity;vec3 position;};uniform h i[4];void main(){vec4 j=vec4(i[0].position.xyz*i[0].intensity,0.0);vec4 k=projectionMatrix*modelViewMatrix*vec4(0,0,0,1);vec4 l=g.projectionMatrix*g.modelViewMatrix*vec4(0,0,0,1);d=vec4(texture(b,c).rgb,0.0);d.a+=1.0;}"
`;

exports[`minify > can mangle multiple GLSL shaders 1`] = `
"#version 300 es
in vec2 a;out vec2 b;void main(){b=a;}"
`;

exports[`minify > can mangle multiple GLSL shaders 2`] = `
"#version 300 es
in vec2 b;out vec4 c[gl_MaxDrawBuffers];void main(){c[0]=b.sstt;}"
`;

exports[`minify > can mangle multiple GLSL shaders 3`] = `
Map {
  "uv" => "a",
  "c" => "b",
  "data" => "c",
}
`;

exports[`minify > can mangle properties in GLSL 1`] = `
"#version 300 es
precision mediump float;
#define PLUS(n)n+=1;
#define TEST
#if defined(TEST)
const bool a=true;
#endif
uniform sampler2D b;in vec2 c;out vec4 d;
#include <three_test>
layout(std140)uniform e{mat4 f;mat4 g;mat3 h;};layout(std140)uniform i{mat4 j;mat4 k;mat3 l;}m;struct n{float o;vec3 p;};uniform n q[4];void main(){vec4 r=vec4(q[0].p.xyz*q[0].o,0.0);vec4 s=f*g*vec4(0,0,0,1);vec4 t=m.j*m.k*vec4(0,0,0,1);d=vec4(texture(b,c).rgb,0.0);d.a+=1.0;}"
`;

exports[`minify > can minify GLSL 1`] = `
"#version 300 es
precision mediump float;
#define PLUS(n)n+=1;
#define TEST
#if defined(TEST)
const bool isTest=true;
#endif
uniform sampler2D map;in vec2 vUv;out vec4 pc_FragColor;
#include <three_test>
layout(std140)uniform Uniforms1{mat4 projectionMatrix;mat4 modelViewMatrix;mat3 normalMatrix;};layout(std140)uniform Uniforms2{mat4 projectionMatrix;mat4 modelViewMatrix;mat3 normalMatrix;}globals;struct LightData{float intensity;vec3 position;};uniform LightData Light[4];void main(){vec4 lightNormal=vec4(Light[0].position.xyz*Light[0].intensity,0.0);vec4 clipPosition=projectionMatrix*modelViewMatrix*vec4(0,0,0,1);vec4 clipPositionGlobals=globals.projectionMatrix*globals.modelViewMatrix*vec4(0,0,0,1);pc_FragColor=vec4(texture(map,vUv).rgb,0.0);pc_FragColor.a+=1.0;}"
`;

exports[`tokenize > can tokenize GLSL 1`] = `
[
  {
    "type": "symbol",
    "value": "#",
  },
  {
    "type": "keyword",
    "value": "version",
  },
  {
    "type": "int",
    "value": "300",
  },
  {
    "type": "identifier",
    "value": "es",
  },
  {
    "type": "symbol",
    "value": "\\\\",
  },
  {
    "type": "keyword",
    "value": "precision",
  },
  {
    "type": "keyword",
    "value": "mediump",
  },
  {
    "type": "keyword",
    "value": "float",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "comment",
    "value": "// single line
",
  },
  {
    "type": "comment",
    "value": "/*
    multiline
  */",
  },
  {
    "type": "symbol",
    "value": "#",
  },
  {
    "type": "keyword",
    "value": "define",
  },
  {
    "type": "identifier",
    "value": "PLUS",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "identifier",
    "value": "n",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "identifier",
    "value": "n",
  },
  {
    "type": "symbol",
    "value": "+=",
  },
  {
    "type": "int",
    "value": "1",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "symbol",
    "value": "\\\\",
  },
  {
    "type": "symbol",
    "value": "#",
  },
  {
    "type": "keyword",
    "value": "define",
  },
  {
    "type": "identifier",
    "value": "TEST",
  },
  {
    "type": "symbol",
    "value": "\\\\",
  },
  {
    "type": "comment",
    "value": "// inline comment
",
  },
  {
    "type": "symbol",
    "value": "#",
  },
  {
    "type": "keyword",
    "value": "if",
  },
  {
    "type": "keyword",
    "value": "defined",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "identifier",
    "value": "TEST",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "symbol",
    "value": "\\\\",
  },
  {
    "type": "keyword",
    "value": "const",
  },
  {
    "type": "keyword",
    "value": "bool",
  },
  {
    "type": "identifier",
    "value": "isTest",
  },
  {
    "type": "symbol",
    "value": "=",
  },
  {
    "type": "bool",
    "value": "true",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "symbol",
    "value": "#",
  },
  {
    "type": "keyword",
    "value": "endif",
  },
  {
    "type": "symbol",
    "value": "\\\\",
  },
  {
    "type": "keyword",
    "value": "uniform",
  },
  {
    "type": "keyword",
    "value": "sampler2D",
  },
  {
    "type": "identifier",
    "value": "map",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "in",
  },
  {
    "type": "keyword",
    "value": "vec2",
  },
  {
    "type": "identifier",
    "value": "vUv",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "out",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "identifier",
    "value": "pc_FragColor",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "symbol",
    "value": "#",
  },
  {
    "type": "keyword",
    "value": "include",
  },
  {
    "type": "symbol",
    "value": "<",
  },
  {
    "type": "identifier",
    "value": "three_test",
  },
  {
    "type": "symbol",
    "value": ">",
  },
  {
    "type": "symbol",
    "value": "\\\\",
  },
  {
    "type": "keyword",
    "value": "layout",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "identifier",
    "value": "std140",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "keyword",
    "value": "uniform",
  },
  {
    "type": "identifier",
    "value": "Uniforms1",
  },
  {
    "type": "symbol",
    "value": "{",
  },
  {
    "type": "keyword",
    "value": "mat4",
  },
  {
    "type": "identifier",
    "value": "projectionMatrix",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "mat4",
  },
  {
    "type": "identifier",
    "value": "modelViewMatrix",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "mat3",
  },
  {
    "type": "identifier",
    "value": "normalMatrix",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "symbol",
    "value": "}",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "layout",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "identifier",
    "value": "std140",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "keyword",
    "value": "uniform",
  },
  {
    "type": "identifier",
    "value": "Uniforms2",
  },
  {
    "type": "symbol",
    "value": "{",
  },
  {
    "type": "keyword",
    "value": "mat4",
  },
  {
    "type": "identifier",
    "value": "projectionMatrix",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "mat4",
  },
  {
    "type": "identifier",
    "value": "modelViewMatrix",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "mat3",
  },
  {
    "type": "identifier",
    "value": "normalMatrix",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "symbol",
    "value": "}",
  },
  {
    "type": "identifier",
    "value": "globals",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "struct",
  },
  {
    "type": "identifier",
    "value": "LightData",
  },
  {
    "type": "symbol",
    "value": "{",
  },
  {
    "type": "keyword",
    "value": "float",
  },
  {
    "type": "identifier",
    "value": "intensity",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "vec3",
  },
  {
    "type": "identifier",
    "value": "position",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "symbol",
    "value": "}",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "uniform",
  },
  {
    "type": "identifier",
    "value": "LightData",
  },
  {
    "type": "identifier",
    "value": "Light",
  },
  {
    "type": "symbol",
    "value": "[",
  },
  {
    "type": "int",
    "value": "4",
  },
  {
    "type": "symbol",
    "value": "]",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "void",
  },
  {
    "type": "identifier",
    "value": "main",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "symbol",
    "value": "{",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "identifier",
    "value": "lightNormal",
  },
  {
    "type": "symbol",
    "value": "=",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "identifier",
    "value": "Light",
  },
  {
    "type": "symbol",
    "value": "[",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": "]",
  },
  {
    "type": "symbol",
    "value": ".",
  },
  {
    "type": "identifier",
    "value": "position",
  },
  {
    "type": "symbol",
    "value": ".",
  },
  {
    "type": "identifier",
    "value": "xyz",
  },
  {
    "type": "symbol",
    "value": "*",
  },
  {
    "type": "identifier",
    "value": "Light",
  },
  {
    "type": "symbol",
    "value": "[",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": "]",
  },
  {
    "type": "symbol",
    "value": ".",
  },
  {
    "type": "identifier",
    "value": "intensity",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "float",
    "value": "0.0",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "identifier",
    "value": "clipPosition",
  },
  {
    "type": "symbol",
    "value": "=",
  },
  {
    "type": "identifier",
    "value": "projectionMatrix",
  },
  {
    "type": "symbol",
    "value": "*",
  },
  {
    "type": "identifier",
    "value": "modelViewMatrix",
  },
  {
    "type": "symbol",
    "value": "*",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "int",
    "value": "1",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "identifier",
    "value": "clipPositionGlobals",
  },
  {
    "type": "symbol",
    "value": "=",
  },
  {
    "type": "identifier",
    "value": "globals",
  },
  {
    "type": "symbol",
    "value": ".",
  },
  {
    "type": "identifier",
    "value": "projectionMatrix",
  },
  {
    "type": "symbol",
    "value": "*",
  },
  {
    "type": "identifier",
    "value": "globals",
  },
  {
    "type": "symbol",
    "value": ".",
  },
  {
    "type": "identifier",
    "value": "modelViewMatrix",
  },
  {
    "type": "symbol",
    "value": "*",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "int",
    "value": "0",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "int",
    "value": "1",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "identifier",
    "value": "pc_FragColor",
  },
  {
    "type": "symbol",
    "value": "=",
  },
  {
    "type": "keyword",
    "value": "vec4",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "keyword",
    "value": "texture",
  },
  {
    "type": "symbol",
    "value": "(",
  },
  {
    "type": "identifier",
    "value": "map",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "identifier",
    "value": "vUv",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "symbol",
    "value": ".",
  },
  {
    "type": "identifier",
    "value": "rgb",
  },
  {
    "type": "symbol",
    "value": ",",
  },
  {
    "type": "float",
    "value": "0.0",
  },
  {
    "type": "symbol",
    "value": ")",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "identifier",
    "value": "pc_FragColor",
  },
  {
    "type": "symbol",
    "value": ".",
  },
  {
    "type": "identifier",
    "value": "a",
  },
  {
    "type": "symbol",
    "value": "+=",
  },
  {
    "type": "float",
    "value": "1.0",
  },
  {
    "type": "symbol",
    "value": ";",
  },
  {
    "type": "symbol",
    "value": "}",
  },
]
`;
