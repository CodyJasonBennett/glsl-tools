// https://registry.khronos.org/OpenGL/specs/es/3.0/GLSL_ES_Specification_3.00.pdf
export const GLSL_KEYWORDS = [
  // Literals
  'true',
  'false',

  // Qualifiers
  'attribute',
  'const',
  'uniform',
  'varying',
  'layout',
  'centroid',
  'flat',
  'smooth',
  'noperspective',
  'patch',
  'sample',

  // Flow control
  'break',
  'continue',
  'do',
  'for',
  'while',
  'switch',
  'case',
  'default',
  'if',
  'else',

  // Subroutines
  'subroutine',
  'in',
  'out',
  'inout',

  // Basic types
  'float',
  'int',
  'void',
  'bool',
  'vec2',
  'vec3',
  'vec4',
  'bvec2',
  'bvec3',
  'bvec4',
  'ivec2',
  'ivec3',
  'ivec4',
  'mat2',
  'mat3',
  'mat4',
  'mat2x2',
  'mat2x3',
  'mat2x4',
  'mat3x2',
  'mat3x3',
  'mat3x4',
  'mat4x2',
  'mat4x3',
  'mat4x4',
  'uint',
  'uvec2',
  'uvec3',
  'uvec4',

  // Sampler types
  'sampler2D',
  'sampler3D',
  'samplerCube',
  'sampler2DShadow',
  'samplerCubeShadow',
  'sampler2DArray',
  'sampler2DArrayShadow',
  'isampler2D',
  'isampler3D',
  'isamplerCube',
  'isampler2DArray',
  'usampler2D',
  'usampler3D',
  'usamplerCube',
  'usampler2DArray',
  'sampler2DRect',
  'sampler2DRectShadow',
  'isampler2DRect',
  'usampler2DRect',

  // Precision qualifiers
  'lowp',
  'mediump',
  'highp',
  'precision',

  // Other keywords
  'invariant',
  'discard',
  'return',
  'struct',

  // Preprocessor directives
  'define',
  'undef',
  'if',
  'ifdef',
  'ifndef',
  'else',
  'elif',
  'endif',
  'error',
  'pragma',
  'extension',
  'version',
  'line',

  // Additional directives
  'include',

  // Methods
  'radians',
  'degrees',
  'sin',
  'cos',
  'tan',
  'asin',
  'acos',
  'atan',
  'pow',
  'exp',
  'log',
  'log2',
  'log10',
  'exp2',
  'sqrt',
  'inversesqrt',
  'abs',
  'sign',
  'floor',
  'ceil',
  'fract',
  'mod',
  'min',
  'max',
  'clamp',
  'mix',
  'step',
  'smoothstep',
  'length',
  'distance',
  'dot',
  'cross',
  'normalize',
  'faceforward',
  'reflect',
  'refract',
  'matrixCompMult',
  'outerProduct',
  'transpose',
  'determinant',
  'inverse',
  'lessThan',
  'lessThanEqual',
  'greaterThan',
  'greaterThanEqual',
  'equal',
  'notEqual',
  'any',
  'all',
  'not',
  'textureSize',
  'texture',
  'textureProj',
  'textureLod',
  'textureOffset',
  'texelFetch',
  'texelFetchOffset',
  'textureProjOffset',
  'textureLodOffset',
  'textureProjLod',
  'textureProjLodOffset',
  'textureGrad',
  'textureGradOffset',
  'textureProjGrad',
  'textureProjGradOffset',
  // GL_OES_standard_derivatives
  'dFdx',
  'dFdy',
  'fwidth',
  // GL_OES_texture_float
  'packSnorm2x16',
  'packSnorm4x8',
  'packUnorm2x16',
  'packUnorm4x8',
  'unpackSnorm2x16',
  'unpackSnorm4x8',
  'unpackUnorm2x16',
  'unpackUnorm4x8',
  // GL_OES_texture_half_float
  'frexp',
  'ldexp',
  // GL_OES_element_index_uint
  'floatBitsToInt',
  'floatBitsToUint',
  'intBitsToFloat',
  'uintBitsToFloat',
  // GL_EXT_shader_integer_mix
  'packHalf2x16',
  'unpackHalf2x16',
  // GL_EXT_shader_image_load_store
  'bitfieldExtract',
  'bitfieldInsert',
  'bitfieldReverse',

  // Constants
  // TODO: extensions
  'gl_DepthRange',
  'gl_PointSize',
  'gl_ClipDistance',
  'gl_CullDistance',
  'gl_FragCoord',
  'gl_FrontFacing',
  'gl_HelperInvocation',
  'gl_InstanceID',
  'gl_InvocationID',
  'gl_Layer',
  'gl_NumSamples',
  'gl_PatchVerticesIn',
  'gl_PerVertex',
  'gl_Position',
  'gl_SampleID',
  'gl_SampleMask',
  'gl_SamplePosition',
  'gl_TessCoord',
  'gl_TessLevelOuter',
  'gl_TessLevelInner',
  'gl_VertexID',
  // GL_ANGLE_multi_draw
  'gl_DrawID',
]

export const GLSL_SYMBOLS = [
  // Preprocessor
  '#',
  '\\',

  // Comments
  '//',
  '/*',
  '*/',

  // Punctuation
  '.',
  ',',
  ';',
  '{',
  '}',
  '(',
  ')',
  '[',
  ']',

  // Comparison
  '?',
  ':',
  '<',
  '>',
  '<=',
  '>=',
  '&&',
  '||',

  // Modifier
  '~',
  '=',
  '!',
  '+',
  '-',
  '/',
  '&',
  '|',
  '^',
  '%',
  '<<',
  '>>',

  // Operators
  '++',
  '--',
  '==',
  '!=',
  '+=',
  '-=',
  '/=',
  '&=',
  '|=',
  '^=',
  '%=',
  '<<=',
  '>>=',
]
